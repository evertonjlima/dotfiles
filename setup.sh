#!/bin/bash

# Define the dotfiles directory
DOTFILES_DIR="$HOME/repository/dotfiles"

# Symbols for pretty printing
CHECKMARK="\033[0;32m✔\033[0m"
CROSS="\033[0;31m✘\033[0m"

# Function to create symlinks and print status
create_symlink() {
  src="$1"
  dest="$2"
  toolname="$(basename "$(dirname "$src")")"  # Get the tool name from the directory

  # Remove existing symlink or file if it exists
  if [ -L "$dest" ] || [ -e "$dest" ]; then
    rm -f "$dest"
  fi

  # Create the symlink and print result
  if ln -sf "$src" "$dest"; then
    echo -e "$CHECKMARK Symlink created for $toolname: $dest → $src"
  else
    echo -e "$CROSS Failed to create symlink for $toolname: $dest"
  fi
}

# Loop through all .symlink files in DOTFILES_DIR and link to home directory
find "$DOTFILES_DIR" -name "*.symlink" | while read -r file; do
  # Create destination name in home directory (e.g., .vimrc, .gitconfig)
  filename=".$(basename "${file%.symlink}")"
  create_symlink "$file" "$HOME/$filename"
done

# Install Homebrew if not already installed
if ! command -v brew &> /dev/null; then
  echo "Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  if command -v brew &> /dev/null; then
    echo -e "$CHECKMARK Homebrew installed successfully."
  else
    echo -e "$CROSS Failed to install Homebrew."
  fi
else
  echo -e "$CHECKMARK Homebrew is already installed."
fi

# Install iTerm2 via Homebrew
if ! brew list --cask iterm2 &> /dev/null; then
  echo "Installing iTerm2..."
  brew install --cask iterm2

  if brew list --cask iterm2 &> /dev/null; then
    echo -e "$CHECKMARK iTerm2 installed successfully."
  else
    echo -e "$CROSS Failed to install iTerm2."
  fi
else
  echo -e "$CHECKMARK iTerm2 is already installed."
fi

# Install Fira Code font via Homebrew
if ! brew list --cask font-fira-code &> /dev/null; then
  echo "Installing Fira Code font..."
  brew tap homebrew/cask-fonts
  brew install --cask font-fira-code

  if brew list --cask font-fira-code &> /dev/null; then
    echo -e "$CHECKMARK Fira Code font installed successfully."
  else
    echo -e "$CROSS Failed to install Fira Code font."
  fi
else
  echo -e "$CHECKMARK Fira Code font is already installed."
fi

# Install Vim-Plug if not already installed
if [ ! -f "$HOME/.vim/autoload/plug.vim" ]; then
  echo "Installing Vim-Plug..."
  curl -fLo "$HOME/.vim/autoload/plug.vim" --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  
  if [ -f "$HOME/.vim/autoload/plug.vim" ]; then
    echo -e "$CHECKMARK Vim-Plug installed successfully."
  else
    echo -e "$CROSS Failed to install Vim-Plug."
  fi
else
  echo -e "$CHECKMARK Vim-Plug is already installed."
fi

# Update .zshrc to source Zsh-specific files
ZSHRC="$HOME/.zshrc"
echo -e "\n# Auto-generated by setup.sh" >> "$ZSHRC"
echo "export DOTFILES_DIR=\"$DOTFILES_DIR\"" >> "$ZSHRC"

# Pretty-print sourcing Zsh configurations
echo -e "\nConfiguring Zsh files in $ZSHRC:"
find "$DOTFILES_DIR/zsh" -name "*.zsh" | while read -r zsh_file; do
  if echo "[ -f \"$zsh_file\" ] && source \"$zsh_file\"" >> "$ZSHRC"; then
    echo -e "$CHECKMARK Added $zsh_file to $ZSHRC"
  else
    echo -e "$CROSS Failed to add $zsh_file to $ZSHRC"
  fi
done

:

# Completion message
echo -e "\nDotfiles setup complete!"

